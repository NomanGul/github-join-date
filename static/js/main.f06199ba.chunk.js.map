{"version":3,"sources":["utils/Dimensions.js","assets/SvgWrapper.js","assets/FacebookIcon.js","assets/TwitterIcon.js","assets/LinkedinIcon.js","components/HomeShowcase.js","components/SearchForm.js","components/SocialHandler.js","components/ErrorMessage.js","components/Profile.js","services/Github.js","App.js","utils/usePrevious.js","serviceWorker.js","index.js"],"names":["width","window","innerWidth","document","documentElement","clientWidth","body","height","innerHeight","clientHeight","SvgWrapper","viewBox","style","children","props","xmlns","FacebookIcon","fill","d","TwitterIcon","LinkedinIcon","Text","Typography","Title","HomeShowcase","className","role","aria-label","Search","Input","SearchForm","handleChange","value","searchHandler","type","addonBefore","onChange","placeholder","onSearch","SocialHandler","href","marginRight","target","rel","Paragraph","ErrorMessage","errMessage","Profile","renderProfileLink","avatar","date","src","alt","code","GithubService","getJoiningDateOfUser","userName","a","fetch","headers","then","res","status","Error","json","App","useState","name","login","setData","setUserName","loading","setLoading","error","setError","prevUsername","ref","React","useRef","useEffect","current","usePrevious","getJoiningDate","user","moment","created_at","format","avatar_url","message","split","recycle","numberOfPieces","e","size","spinning","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f06199ba.chunk.js","sourcesContent":["export const width =\n  window.innerWidth ||\n  document.documentElement.clientWidth ||\n  document.body.clientWidth\n\nexport const height =\n  window.innerHeight ||\n  document.documentElement.clientHeight ||\n  document.body.clientHeight\n","import React from 'react'\n\nconst SvgWrapper = ({ width = 24, height = 24, viewBox = '0 0 24 24', style = {}, children, ...props }) => {\n  return (\n    <svg\n      style={style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox={viewBox}\n      {...props}\n    >{children}</svg>\n  );\n}\n\nexport default SvgWrapper","import React from 'react'\nimport SvgWrapper from './SvgWrapper'\n\nconst FacebookIcon = ({ fill = '#3b5998', ...props }) => {\n  return (\n    <SvgWrapper {...props}>\n      <path\n        style={{ fill }}\n        d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm3 8h-1.35c-.538 0-.65.221-.65.778v1.222h2l-.209 2h-1.791v7h-3v-7h-2v-2h2v-2.308c0-1.769.931-2.692 3.029-2.692h1.971v3z\"\n      />\n    </SvgWrapper>\n  );\n}\n\nexport default FacebookIcon","import React from 'react'\nimport SvgWrapper from './SvgWrapper'\n\nconst TwitterIcon = ({ fill = '#00acee', ...props }) => {\n  return (\n    <SvgWrapper {...props}>\n      <path\n        style={{ fill }}\n        d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6.066 9.645c.183 4.04-2.83 8.544-8.164 8.544-1.622 0-3.131-.476-4.402-1.291 1.524.18 3.045-.244 4.252-1.189-1.256-.023-2.317-.854-2.684-1.995.451.086.895.061 1.298-.049-1.381-.278-2.335-1.522-2.304-2.853.388.215.83.344 1.301.359-1.279-.855-1.641-2.544-.889-3.835 1.416 1.738 3.533 2.881 5.92 3.001-.419-1.796.944-3.527 2.799-3.527.825 0 1.572.349 2.096.907.654-.128 1.27-.368 1.824-.697-.215.671-.67 1.233-1.263 1.589.581-.07 1.135-.224 1.649-.453-.384.578-.87 1.084-1.433 1.489z\"\n      />\n    </SvgWrapper>\n  );\n}\n\nexport default TwitterIcon","import React from 'react'\nimport SvgWrapper from './SvgWrapper'\n\nconst LinkedinIcon = ({ fill = \"#FFF\", ...props }) => {\n    delete props.viewBox\n    props.viewBox = \"0 0 512 512\"\n    return (\n        <SvgWrapper {...props}>\n            <path\n                style={{ fill }}\n                d=\"M186.4 142.4c0 19-15.3 34.5-34.2 34.5 -18.9 0-34.2-15.4-34.2-34.5 0-19 15.3-34.5 34.2-34.5C171.1 107.9 186.4 123.4 186.4 142.4zM181.4 201.3h-57.8V388.1h57.8V201.3zM273.8 201.3h-55.4V388.1h55.4c0 0 0-69.3 0-98 0-26.3 12.1-41.9 35.2-41.9 21.3 0 31.5 15 31.5 41.9 0 26.9 0 98 0 98h57.5c0 0 0-68.2 0-118.3 0-50-28.3-74.2-68-74.2 -39.6 0-56.3 30.9-56.3 30.9v-25.2H273.8z\"\n            />\n        </SvgWrapper>\n    );\n}\n\nexport default LinkedinIcon","import React from \"react\"\nimport { Typography } from \"antd\"\n\nconst { Text, Title } = Typography\n\nconst HomeShowcase = () => {\n  return (\n    <>\n      <Title className=\"header_container\">\n        <span className=\"header\">Octocat Day</span>\n        <span role=\"img\" aria-label=\"man_technologist\">\n          👨‍💻\n        </span>\n      </Title>\n      <Text className=\"sub_header\">\n        GitHub user join date\n        <span role=\"img\" aria-label=\"smiley\">\n          😃\n        </span>\n      </Text>\n    </>\n  )\n}\n\nexport default HomeShowcase\n","import React from \"react\"\nimport { Input } from \"antd\"\n\nconst { Search } = Input\nconst SearchForm = ({ handleChange, value, searchHandler }) => (\n  <div className=\"search_container\">\n    <Search\n      type=\"text\"\n      addonBefore=\"@\"\n      onChange={handleChange}\n      value={value}\n      placeholder=\"GitHub handle\"\n      onSearch={searchHandler}\n      className=\"search\"\n    />\n  </div>\n)\n\nexport default SearchForm\n","import React from \"react\"\n\nconst SocialHandler = ({ children, href }) => {\n  return (\n    <a\n      style={{ marginRight: 10 }}\n      href={href}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {children}\n    </a>\n  )\n}\n\nexport default SocialHandler\n","import React from \"react\"\nimport { Typography } from \"antd\"\n\nconst { Paragraph } = Typography\nconst ErrorMessage = ({ errMessage }) => (\n  <Paragraph className=\"paragraph\" type=\"secondary\">\n    {errMessage}\n    <span role=\"img\" aria-label=\"wrong\">\n      ❌\n    </span>\n  </Paragraph>\n)\nexport default ErrorMessage\n","import React from \"react\"\nimport { Typography } from \"antd\"\n\nconst { Paragraph, Text } = Typography\nconst Profile = ({ renderProfileLink, avatar, date }) => (\n  <>\n    <Paragraph className=\"paragraph\" type=\"secondary\">\n      <img className=\"avatar-style\" src={avatar} alt=\"avatar\" />\n      {renderProfileLink()} joined GitHub on\n    </Paragraph>\n    <Text code className=\"date\">\n      {date}\n    </Text>\n  </>\n)\n\nexport default Profile\n","/**\n * @class GithubService\n * @description A central service for all of the operations related to the Github Api.\n */\nexport default class GithubService {\n  static getJoiningDateOfUser = async userName => {\n    try {\n      return await fetch(`https://api.github.com/users/${userName}`, {\n        headers: {\n          \"User-Agent\": \"Octocat-Day\"\n        }\n      }).then(res => {\n        if (res.status === 404) throw new Error(\"User not found.\")\n        else if (res.status !== 200) throw new Error(\"Some Error Occurred.\")\n        else return res.json()\n      })\n    } catch (err) {\n      throw new Error(err)\n    }\n  }\n}\n","import React, { useState } from \"react\"\nimport moment from \"moment\"\nimport Confetti from \"react-confetti\"\nimport { Spin } from \"antd\"\nimport { width, height } from \"./utils/Dimensions\"\nimport { usePrevious } from \"./utils/usePrevious\"\nimport { FaceBookIcon, TwitterIcon, LinkedinIcon } from \"./assets/svgs\"\nimport HomeShowcase from \"./components/HomeShowcase\"\nimport SearchForm from \"./components/SearchForm\"\nimport SocialHandler from \"./components/SocialHandler\"\nimport ErrorMessage from \"./components/ErrorMessage\"\nimport Profile from \"./components/Profile\"\nimport GithubService from \"./services/Github\"\nimport \"./App.css\"\n\nconst ICON_WIDTH = 30,\n  ICON_HEIGHT = 30\n\nconst App = () => {\n  const [{ name, date, login, avatar }, setData] = useState({\n    name: \"\",\n    date: \"\",\n    login: \"\",\n    avatar: \"\"\n  })\n  const [userName, setUserName] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  const prevUsername = usePrevious(userName)\n\n  // for github user data fetching via github api\n  const getJoiningDate = async () => {\n    if (!userName || prevUsername === userName) return false\n    setLoading(true)\n    setError(\"\")\n    try {\n      const user = await GithubService.getJoiningDateOfUser(userName)\n      setData({\n        name: user.name,\n        date: moment(user.created_at).format(\"DD MMMM YYYY\"),\n        login: user.login,\n        avatar: user.avatar_url\n      })\n      setUserName(\"\")\n    } catch (err) {\n      setData({ name: \"\", date: \"\", login: \"\" })\n      /**\n       * @code err.message.split(\":\")[1] - Formatted message.\n       * @description: Error constructor returns response of pattern Error: ERR_MESSAGE\n       */\n      setError(err.message.split(\":\")[1])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const renderProfileLink = () => {\n    return (\n      <a\n        href={`https://github.com/${login}`}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {name || login}\n      </a>\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      {!loading && date ? (\n        <Confetti\n          recycle={false}\n          width={width}\n          height={height}\n          numberOfPieces={300}\n        />\n      ) : null}\n\n      <div className=\"row column\">\n        <HomeShowcase />\n        <SearchForm\n          handleChange={e => setUserName(e.target.value)}\n          value={userName}\n          searchHandler={getJoiningDate}\n        />\n      </div>\n\n      <div className=\"response__container row column\">\n        <Spin size=\"large\" spinning={loading} />\n        {!loading && date ? (\n          <>\n            <Profile\n              renderProfileLink={renderProfileLink}\n              avatar={avatar}\n              date={date}\n            />\n            <div>\n              <SocialHandler\n                href={`http://www.facebook.com/sharer.php?u=http://octocatday.com&quote=I%20joined%20GitHub%20on%20${date}%20%0aFind%20yours%20at%20https://www.octocatday.com`}\n              >\n                <FaceBookIcon\n                  className=\"facebookIcon\"\n                  width={ICON_WIDTH}\n                  height={ICON_HEIGHT}\n                />\n              </SocialHandler>\n              <SocialHandler\n                href={`https://twitter.com/intent/tweet?text=I%20joined%20GitHub%20on%20${date}%20🎉%0aFind%20yours%20at:%20https://www.octocatday.com%20😎`}\n              >\n                <TwitterIcon\n                  className=\"twitterIcon\"\n                  width={ICON_WIDTH}\n                  height={ICON_HEIGHT}\n                />\n              </SocialHandler>\n              <SocialHandler\n                href={`https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fwww.octocatday.com`}\n              >\n                <LinkedinIcon\n                  className=\"linkedinIcon\"\n                  width={ICON_WIDTH}\n                  height={ICON_HEIGHT}\n                />\n              </SocialHandler>\n            </div>\n          </>\n        ) : error ? (\n          <ErrorMessage errMessage={error} />\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\n\nexport const usePrevious = value => {\n  const ref = React.useRef()\n  React.useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}